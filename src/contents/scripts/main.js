(function() {
  var $, History, PageAnimator,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  $ = jQuery;

  History = window.History;

  $.fn.extend({
    middleAlign: function(options) {
      return $(window).resize((function(_this) {
        return function() {
          return _this.each(function() {
            var h, wh;
            wh = $('.header-wrap').outerHeight();
            h = $(this).outerHeight();
            if (wh > h) {
              return $(this).css('top', (wh - h) / 2);
            }
          });
        };
      })(this)).resize();
    }
  });

  $('.js-middle-align').middleAlign();

  $.fn.extend({
    maxHeight: function(options) {
      return $(window).resize((function(_this) {
        return function() {
          return _this.each(function() {
            var wh;
            wh = $(window).outerHeight();
            return $(this).css('height', wh);
          });
        };
      })(this)).resize();
    }
  });

  $('.js-max-height').maxHeight();

  $.fn.extend({
    marginTop: function(options) {
      return $(window).resize((function(_this) {
        return function() {
          return _this.each(function() {
            var wh;
            wh = $(window).outerHeight();
            return $(this).css('top', wh);
          });
        };
      })(this)).resize();
    }
  });

  $('.js-margin-top').marginTop();

  $.fn.extend({
    navLinks: function(options) {
      return this.each(function() {
        return $(this).on('click touchstart', 'a', function(e) {
          var newHeight, newTop, top;
          e.preventDefault();
          newHeight = 260;
          top = $('.js-middle-align').css('top');
          newTop = (260 - $('.js-middle-align').outerHeight()) / 2;
          $('.js-middle-align').animate({
            top: newTop
          }, 150);
          return $('.js-max-height').animate({
            height: 260
          }, 150);
        });
      });
    }
  });

  $.fn.extend({
    ajaxLoader: function(options) {
      var binders, currentLevel, getLevel, linkClicked;
      binders = function() {
        return $('[data-history]').on('click touchstart', linkClicked);
      };
      getLevel = function(url) {
        return url.split('/').length - 1;
      };
      linkClicked = function(e) {
        var href, level;
        e.preventDefault();
        href = $(e.currentTarget).attr('href');
        level = getLevel(href);
        return console.log(level);
      };
      currentLevel = getLevel(document.location.pathname);
      console.log(currentLevel);
      return binders();
    }
  });

  PageAnimator = (function() {
    PageAnimator.prototype.defaults = {};

    function PageAnimator(el, options) {
      this.onStateChange = __bind(this.onStateChange, this);
      this.onLinkClicked = __bind(this.onLinkClicked, this);
      this.options = $.extend({}, this.defaults, options);
      this.$el = $(el);
      this.currentLevel = this.getLevel(document.location.pathname);
      this.binders();
    }

    PageAnimator.prototype.binders = function() {
      this.$el.on('click', '[data-pa]', this.onLinkClicked);
      return History.Adapter.bind(window, 'statechange', this.onStateChange);
    };

    PageAnimator.prototype.onLinkClicked = function(e) {
      var href, level, title;
      e.preventDefault();
      href = $(e.currentTarget).attr('href');
      title = $(e.currentTarget).attr('title') + ' - somename';
      level = this.getLevel(href);
      return $.get(href).done(function(data) {
        var content;
        content = $(data).find('#content').html();
        return History.pushState({
          content: content,
          level: level
        }, title, href);
      }).fail(function() {
        return console.log('failed :(');
      });
    };

    PageAnimator.prototype.onStateChange = function() {
      var content, level, state;
      state = History.getState();
      level = state.data.level;
      content = state.data.content;
      if (level == null) {
        return window.location = state.url;
      }
      if (level === this.currentLevel) {
        this.animateSibling(content);
      }
      if (level < this.currentLevel) {
        this.animateBackwards(content);
      }
      if (level > this.currentLevel) {
        this.animateForwards(content);
      }
      return this.currentLevel = level;
    };

    PageAnimator.prototype.animateSibling = function(content) {
      return this.animate(content, 'anim-up', 'anim-down');
    };

    PageAnimator.prototype.animateBackwards = function(content) {
      return this.animate(content, 'anim-left', 'anim-right');
    };

    PageAnimator.prototype.animateForwards = function(content) {
      return this.animate(content, 'anim-right', 'anim-left');
    };

    PageAnimator.prototype.getLevel = function(url) {
      return url.split('/').length - 1 || null;
    };

    PageAnimator.prototype.collapseHeader = function(fn) {
      if ($('.js-max-height').length === 0) {
        return fn();
      }
      $('.js-middle-align').animate({
        top: 0
      }, 150);
      return $('.js-max-height').animate({
        height: 260
      }, 150, function() {
        $(this).removeClass('js-max-height');
        return fn();
      });
    };

    PageAnimator.prototype.animate = function(content, inClass, outClass) {
      return this.collapseHeader(function() {
        var $currentContent, $newContent;
        $newContent = $(content).addClass(inClass);
        $currentContent = $('#content .section-wrap:first');
        $('#content').append($newContent);
        $('#content').css('height', $newContent.outerHeight());
        setTimeout(function() {
          $currentContent.addClass(outClass);
          $newContent.removeClass(inClass);
          return setTimeout(function() {
            $currentContent.remove();
            $('#content').css('min-height', $(window).height() - 60);
            return $('#content').css('height', 'auto');
          }, 500);
        }, 50);
        return $('html, body').animate({
          scrollTop: 204
        }, 150);
      });
    };

    return PageAnimator;

  })();

  $.fn.extend({
    pageAnimator: function() {
      var args, option;
      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return this.each(function() {
        var $this;
        $this = $(this);
        return new PageAnimator(this, {});
      });
    }
  });

  $('body').pageAnimator();

}).call(this);

//# sourceMappingURL=data:application/json;base64,